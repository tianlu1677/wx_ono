<style lang="less">
  .verify_code {

    width: 80%;
    font-size: 14px;
    text {
      color: #bdc7cc;
    }
  }

</style>

<template>
  <view class="container">
    <view class="page__bd">
      <avatar :userinfo.sync="userInfo"></avatar>
      <view style="margin-top: 20px"></view>

      <view class="weui-cells weui-cells_after-title">
        <repeat for="{{cells}}" key="index" item="cell">
          <block wx:if="{{cell.link && cell.url}}">
            <navigator url="{{cell.url}}" class="weui-cell weui-cell_access" hover-class="weui-cell_active">
              <cell :cell.sync="cell"></cell>
            </navigator>
          </block>


          <!-- <block wx:if="{{!cell.link}}">
            <view class="weui-cell">
              <cell :cell.sync="cell"></cell>
            </view>
          </block>   -->

        </repeat>
        <!-- <view class="weui-cell" @tap="copyCode">
          <cell :cell.sync="copy_cell"></cell>
        </view>  -->
      </view>




      <!-- <button class="weui-btn" type="primary" style="width: 80%" @tap="checkWallet">   申请提取
      </button>
       -->



    </view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import Avatar from '../../components/avatar';
  import Cell from '../../components/cell';
  import api from '../../services/api';
  import UserInfoMixin from '../../mixins/userinfo_mixin';

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '个人中心'
    };

    mixins = [UserInfoMixin];

    components = {
      avatar: Avatar,
      cell: Cell
    };

    data = {
      cells: null,
      copy_cell: null
    };

    async onPullDownRefresh() {
      wepy.showNavigationBarLoading();
      await this.loadUserInfo();
      this.cells = this.setCells();
      wepy.stopPullDownRefresh();
      wepy.hideNavigationBarLoading();
      this.$apply();
    }

    setCells() {
      const path = '../../images/icons';
      return [
        {
          url: '/pages/mine/invite_active_logs',
          icon: `${path}/all-amount.png`,
          title: '累计获取',
          desc: `${this.userInfo.all_amount}`,
          link: true
        },

        // {url: '/pages/mine/draw_logs', icon: `${path}/draw-money.png`, title: '成功提取', desc: `${this.userInfo.draw_amount}`, link: true},
        // {url: '/pages/mine/invite_unactive_logs', icon: `${path}/wallet.png`, title: '待激活', desc: `${this.userInfo.unactive_amount} NKC`, link: true},

        { url: '/pages/mine/how_play', icon: `${path}/intro.png`, title: '项目介绍', desc: '', link: true },

        { url: '/pages/mine/about', icon: `${path}/intro.png`, title: '关于小助手', desc: '', link: true }
        // {url: null, icon: `${path}/my-code.png`, title: '我的编号', desc: '点击复制 ', link: false}
      ];
    }

    computed = {};

    methods = {
      checkWallet() {
        if (!api.isLogin()) {
          return;
        }
        if (this.userInfo.wallet) {
          wepy.navigateTo({ url: '/pages/mine/draw_money' });
        } else {
          wepy.navigateTo({ url: '/pages/mine/wallet' });
        }
      },
      copyCode() {
        wepy.showToast({
          title: '复制成功',
          icon: 'none',
          duration: 1000
        });

        wepy.setClipboardData({
          data: `我的身份编号是: ${this.userInfo.verify_code}`
        });
      },

      async activeCode(e) {
        const code = e.detail.value.code;
        if (code.length < 15) {
          wepy.showToast({
            title: '用户编号错误',
            icon: 'none',
            duration: 1000
          });
          // this.activeCodeReset()
          return;
        } else {
          const res = await api.activeInviteLog({ verify_code: code });
          wepy.showModal({
            title: '友情提示',
            content: `${res.msg}`,
            showCancel: false
          });
        }
      }
    };

    async onShow() {
      await this.loadUserInfo();
      this.cells = this.setCells();
      this.copy_cell = this.cells[3];
      this.$apply();
    }
  }
</script>
