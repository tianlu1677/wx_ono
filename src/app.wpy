<style lang="less">
  @import "./style/weui.less";
  page {
    height: 100%;
  }
  .container {
    height: 100%; 
    // min-height: 555px;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
    background-color: #f8f8f8;
  }
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import loginInterface from './services/login_request'
import api from './services/api'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',      
      'pages/mine/settings',
      'pages/mine/invite_active_logs',
      'pages/mine/invite_unactive_logs',
      'pages/mine/draw_logs',
      'pages/mine/draw_money',
      'pages/mine/wallet',
      'pages/mine/how_play',
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'Sport',
      navigationBarTextStyle: 'black',
      enablePullDownRefresh: true,
    },

    tabBar: {
      color: '#888',
      selectedColor: '#89bdf7',
      backgroundColor: '#fff',
      borderStyle: 'white',
      position: 'bottom',
      list: [{
        pagePath: 'pages/index',
        text: '首页',
        iconPath: 'images/icons/homepage-gray.png',        
        selectedIconPath: 'images/icons/homepage-blue.png'
      }, 
           
      {
        pagePath: 'pages/mine/settings',
        text: '我的',
        iconPath: 'images/icons/person-gray.png',
        selectedIconPath: 'images/icons/person-green.png'
      }
      ]
    }
  }

  globalData = {
    userInfo: {},
    site_configs: {}
  }

  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify')
  }

  async onLaunch(options = {}) {    
        
    this.globalData.site_configs = await api.getSiteConfigs()
    wepy.setStorage({
        key: 'site_configs',
        data: this.globalData.site_configs
      })
    // console.log('globalData', this.globalData)    
    await this.getUser(options)
  }

  async getUser(options) {
    if(this.globalData.userInfo.token){
      return
    }
    const userInfo = await loginInterface.login()
    this.globalData.userInfo = userInfo
    if(userInfo && options.query) {      
      const share = options.query.share
      await api.setInvite({share: share})      
    }
  }
}
</script>
